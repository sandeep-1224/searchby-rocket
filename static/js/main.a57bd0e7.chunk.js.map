{"version":3,"sources":["Data.js","Search.js","reportWebVitals.js","index.js"],"names":["Data","props","img","name","src","alt","Search","useState","setImg","className","type","placeholder","value","onChange","event","data","target","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAWeA,EATF,SAAEC,GACX,IAAMC,EAAG,+CAA2CD,EAAME,MAC1D,OAEI,mCACA,qBAAKC,IAAOF,EAAMG,IAAK,cCoBhBC,EAxBA,WACX,MAAuBC,mBAAS,IAAhC,mBAAQL,EAAR,KAAaM,EAAb,KAMA,OAEI,mCACA,sBAAKC,UAAU,cAAf,UACA,yEACA,uBAAOC,KAAM,OAAOC,YAAY,kBAChCC,MAAOV,EAEPW,SAbW,SAACC,GACZ,IAAMC,EAAOD,EAAME,OAAOJ,MAC1BK,QAAQC,IAAIH,GACZP,EAAOO,MAYP,cAAC,EAAD,CAAMZ,KAAOD,UCRNiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAIFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a57bd0e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Data = ( props) => {\r\n    const img = `https://source.unsplash.com/600x300/?${props.name}`;\r\n    return (\r\n\r\n        <>\r\n        <img src = {img}  alt =\"search\" />\r\n        </>\r\n    );\r\n};\r\nexport default Data;","import React,{ useState } from \"react\";\r\nimport Data from './Data';\r\n\r\nconst Search = () =>{\r\n    const [ img, setImg] = useState(\"\");\r\n    const images = (event) => {\r\n        const data = event.target.value;\r\n        console.log(data);\r\n        setImg(data);\r\n    };\r\n    return(\r\n\r\n        <> \r\n        <div className=\"text-center\">\r\n        <h1> Here we can search all types of images</h1>\r\n        <input type =\"text\" placeholder=\"Search Anything\" \r\n        value={img}\r\n        \r\n        onChange=\r\n        {images}/>\r\n        <Data name= {img}/>\r\n        </div>\r\n        \r\n        \r\n        </>\r\n    )\r\n};\r\nexport default Search;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Search from \"./Search\";\n// import Navbar from './Navbar';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Search/>\n    {/* <Navbar/> */}\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}